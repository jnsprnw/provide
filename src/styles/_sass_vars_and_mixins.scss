//////////////////////////
// NOT CURRENTLY IN USE //
//////////////////////////

/*

	SASS variables
	When possible, prefer css vars, but e.g. breakpoints can only be set with sass	

	Import this stylesheet in e.g. svelte components that need to make media queries or use the mixins defined below. (Make sure to use <style lang="postcss">.)

*/

// font sizes and spacing

@mixin base-font {
  @include font-style(base);
  @include font-size(m);
}

@mixin heading-font {
  @include font-style(heading);
}

// e.g. apply font style decoration
// font-style default will set line-height to --font-style-default-line-height etc.
@mixin font-style($variation: base) {
  font: var(--font-style-#{$variation});
  text-decoration: none;
}

@mixin font-size($size: m) {
  font-size: var(--font-size-#{$size});
}

// card, hover, modal
@mixin shadow($type: card) {
  box-shadow: var(--effect-depth-#{$type}-color)
    var(--effect-depth-#{$type}-offset-x) var(--effect-depth-#{$type}-offset-y)
    var(--effect-depth-#{$type}-radius);
}

@mixin color-theme($theme: light) {
  color-scheme: #{$theme};

  --color-contour-base: var(--color-#{$theme}-contour-base);
  --color-contour-weaker: var(--color-#{$theme}-contour-weaker);
  --color-contour-weakest: var(--color-#{$theme}-contour-weakest);
  --color-surface-base: var(--color-#{$theme}-surface-base);
  --color-surface-stronger: var(--color-#{$theme}-surface-stronger);
  --color-surface-strongest: var(--color-#{$theme}-surface-strongest);

  --color-category-0: var(--color-#{$theme}-category-0);
  --color-category-1: var(--color-#{$theme}-category-1);
  --color-category-2: var(--color-#{$theme}-category-2);
  --color-category-3: var(--color-#{$theme}-category-3);
  --color-category-4: var(--color-#{$theme}-category-4);
  --color-category-5: var(--color-#{$theme}-category-5);
  --color-diverging-positive-2: var(--color-#{$theme}-diverging-positive-2);
  --color-diverging-positive-1: var(--color-#{$theme}-diverging-positive-1);
  --color-diverging-neutral: var(--color-#{$theme}-diverging-neutral);
  --color-diverging-negative-1: var(--color-#{$theme}-diverging-negative-1);
  --color-diverging-negative-2: var(--color-#{$theme}-diverging-negative-2);

  --color-brand-base: var(--color-#{$theme}-brand-base);
  --color-brand-stronger: var(--color-#{$theme}-brand-stronger);
  --color-brand-weaker: var(--color-#{$theme}-brand-weaker);

  --color-functional-accent: var(--color-#{$theme}-functional-accent);
  --color-functional-warn: var(--color-#{$theme}-functional-warn);
  --color-functional-filtered-out: var(
    --color-#{$theme}-functional-filtered-out
  );
  --color-functional-not-available: var(
    --color-#{$theme}-functional-not-available
  );
  --color-selection-stroke: var(--color-#{$theme}-selection-stroke);
  --color-selection-fill: var(--color-#{$theme}-selection-fill);

  --color-sequential-0: var(--color-#{$theme}-sequential-0);
  --color-sequential-1: var(--color-#{$theme}-sequential-1);
  --color-sequential-2: var(--color-#{$theme}-sequential-2);
  --color-sequential-3: var(--color-#{$theme}-sequential-3);

  --color-text-weakest: var(--color-#{$theme}-text-weakest);
  --color-text-weaker: var(--color-#{$theme}-text-weaker);
  --color-text-base: var(--color-#{$theme}-text-base);

  @if #{$theme} == 'light' {
    --blend-mode: multiply;
  }
  @if #{$theme} == 'dark' {
    --blend-mode: screen;
  }
}

@mixin border-radius() {
  border-radius: calc(var(--size-border-radius) * 1px);
}

@mixin button {
  @include base-font();
  @include shadow(ui);
  @include border-radius();

  padding: var(--space-xxs) var(--space-s);
  background-color: var(--color-surface-base);

  border: 1px solid var(--color-contour-weaker);

  cursor: pointer;

  transition: transform, border, background, color;
  transition-duration: var(--duration-ui);

  &:hover {
    border: 1px solid var(--color-contour-base);
    // transform: scale(1.02);
    // @include shadow(hover);
  }

  &:active {
    transform: scale(0.98);
  }

  &:disabled {
    box-shadow: none;
    border-color: var(--color-contour-weakest);
    color: var(--color-text-weaker);
    pointer-events: none;
  }
}

@mixin color($color: theme) {
  color: var(--color-#{$color});
}

@mixin padding($size: m) {
  padding: var(--space-#{$size});
}

@mixin margin($size: m) {
  margin: var(--space-#{$size});
}

@mixin gap($size: m) {
  gap: var(--space-#{$size});
  grid-gap: var(--space-#{$size});
}

@mixin bold {
  font-weight: var(--font-font-weight-bold-number);
}

@mixin text-border($color, $width) {
  text-shadow: -$width $width 0 $color, -$width 0px 0 $color,
    -$width -$width 0 $color, 0 -$width 0 $color, $width -$width 0 $color,
    $width 0px 0 $color, $width $width 0 $color, 0px $width 0 $color;
}
